{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/employee/employee.component.ts","./src/app/employee/employee.component.html","./src/app/employee/employee_service/employee.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeComponent } from './employee/employee.component';\n\nconst routes: Routes = [\n  {path :'' ,component:EmployeeComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'assignment';\n}\n","<!-- <app-employee></app-employee> -->\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTableModule} from '@angular/material/table';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatTableModule,\n    HttpModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit} from '@angular/core';\nimport { EmployeeService} from './employee_service/employee.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { Validators, FormBuilder, FormGroup, FormControl, FormGroupDirective } from '@angular/forms';\nimport Swal from 'sweetalert2';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css'],\n  providers :[EmployeeService]\n})\nexport class EmployeeComponent implements OnInit  {\n  displayedColumns: string[] = ['id', 'name', 'username', 'email','phone','website','company','edit' ,'delete'];\n  dataSource = new MatTableDataSource<PeriodicElement>();\n  private testInfo = [];\n  statusMessage: any;\n  form:FormGroup;\n  employee_id: any;\n  \n  constructor(private employee_service : EmployeeService,private router:Router,\n    fb:FormBuilder){\n\n    this.form=fb.group({\n      name:[\"\", [Validators.required ,noWhitespaceValidator ]],\n      username:[\"\", [Validators.required ,noWhitespaceValidator ]],\n      email:[\"\", [ Validators.required, noWhitespaceValidator]],\n       id:[\"\"],\n       phone:[\"\",[Validators.required,noWhitespaceValidator]],\n       website:[\"\" ],\n      // address : fb.group({\n      //   street :[\"\"],\n      //   suite :[\"\"],\n      //   city :[\"\"],\n      //   zipcode :[\"\"],\n      //   geo :fb.group({\n      //     lat :[\"\"],\n      //     lng :[\"\"]\n      //   })\n      // }),\n    //  website:[\"\"],\n      // company : fb.group({\n      //   name:[\"\"],\n      //   catchPhrase:[\"\"],\n      //   bs :[\"\"]\n      // }),\n    })\n  }\n  ngOnInit(){\n    this.employee_service.getHistory()\n    .subscribe(\n    ShowData => {\n        this.testInfo = ShowData;\n        this.dataSource =  new MatTableDataSource(this.testInfo)\n        }, error => {\n        this.statusMessage = error;\n    });\n  }\n \n   submit(){\n    if(this.form.valid)\n    {\n      if(this.employee_id == undefined ){\n     this.employee_service.saveData(this.form.value).subscribe(\n       data=>{\n        console.log(data);\n        this.dataSource.data.push(data);\n        this.dataSource._updateChangeSubscription();\n       // this.form.reset();\n       },error=>{\n         this.statusMessage = error;\n       })\n      }\n      else{\n        this.employee_service.updateData(this.form.value).subscribe(\n          data=>{\n           console.log(data);\n           this.dataSource.data[data.id -1] = this.form.value;\n           this.dataSource._updateChangeSubscription();\n           alert(\"updated successfully\")\n          //  this.form.reset();\n          },error=>{\n            this.statusMessage = error;\n          }\n        )\n      }\n    }\n    else{\n      alert(\"Please Fill The Required Fields\")\n    }\n  }\n  removeEmp(n: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You want be able to delete this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Delete'\n    }).then((result) => {\n        if (result.value) {\n          this.dataSource.data.splice(n-1,1);\n          this.dataSource._updateChangeSubscription();\n      }\n    })\n  }\n\n  public edittUser(employee, i) {\n    window.scroll({ \n      top: 0, \n      left: 0, \n      behavior: 'smooth' \n    });\n    this.employee_id = i;\n    this.form.setValue({\n      id: i,\n      name: employee.name,\n      username: employee.username,\n      email: employee.email,\n      phone: employee.phone,\n      website : employee.website\n    });\n  }\n\n}\n\n\nexport function noWhitespaceValidator(control: FormControl) {\n // const isSpace = (control.value || '').match(/\\s/g);\n  const isSpace = control.value.startsWith(' ') || control.value.endsWith(' ')\n  return isSpace ? {'whitespace': true} : null;\n}","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n       \n        <!-- <style>\n            #view-source {\n                position: fixed;\n                z-index: 999;\n                display: block;\n                right: 40px;\n                top: 42px;\n            }\n        </style> -->\n\n     <div style=\"width: 100%\"> \n      <form [formGroup]=\"form\" (ngSubmit)=\"submit()\" class=\"sigin\" >\n      <h3 class=\"text-center\" style=\"padding:10px\">Add Employee details</h3>\n      <div class=\"container\">\n        <div class=\"form-group row\">\n          <label for=\"Name\" class=\"col-sm-2 col-form-label\">Name</label>\n          <div class=\"col-sm-6\">\n            <input formControlName=\"name\" type=\"text\"  class=\"form-control\" id=\"FirstName\">\n            <div *ngIf=\"form.get('name').invalid && form.get('name').touched\" class=\"alert alert-danger\">\n              <span *ngIf=\"form.get('name').hasError('required')\">\n                * Name is required\n              </span>\n              <span *ngIf=\"form.get('name').hasError('whitespace')\">\n               * Name cannot contain whitespace\n            </span>\n          </div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label for=\"username\" class=\"col-sm-2 col-form-label\">Username</label>\n          <div class=\"col-sm-6\">\n            <input formControlName=\"username\" type=\"text\" class=\"form-control\" id=\"username\">\n            <div *ngIf=\"form.get('username').invalid && form.get('username').touched\" class=\"alert alert-danger\">\n              <span *ngIf=\"form.get('username').hasError('required')\">\n                * Username is required\n              </span>\n              <span *ngIf=\"form.get('username').hasError('whitespace')\">\n               * Username cannot contain whitespace\n            </span>\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n            <label for=\"staticEmail\" class=\"col-sm-2 col-form-label\">Email</label>\n            <div class=\"col-sm-6\">\n              <input formControlName=\"email\" type=\"email\"  class=\"form-control\" id=\"staticEmail\" value=\"email@example.com\">\n            <div *ngIf=\"form.get('email').invalid && form.get('email').touched\" class=\"alert alert-danger\">\n              <span *ngIf=\"form.get('email').hasError('required')\">\n                * Email is required\n              </span>\n           <span *ngIf=\"form.get('email').hasError('whitespace')\">\n            * Email cannot contain whitespace\n           </span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"phone\" class=\"col-sm-2 col-form-label\">Phone</label>\n            <div class=\"col-sm-6\">\n              <input formControlName=\"phone\" type=\"text\"  class=\"form-control\" id=\"phone\" >\n            <div *ngIf=\"form.get('phone').invalid && form.get('phone').touched\" class=\"alert alert-danger\">\n              <span *ngIf=\"form.get('phone').hasError('required')\">\n                * Phone Is Required\n             </span>\n             <span *ngIf=\"form.get('phone').hasError('whitespace')\">\n              * Phone cannot contain whitespace\n             </span>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label for=\"website\" class=\"col-sm-2 col-form-label\">Website</label>\n            <div class=\"col-sm-6\">\n              <input formControlName=\"website\" type=\"text\"  class=\"form-control\" id=\"phone\" >\n           \n            </div>\n          </div>\n         \n          <div class=\"form-group-row text-center\">\n              <button  class=\"btn btn-primary\">save</button>\n          </div>\n       </div>\n      </form>\n      </div>\n      \n        <div class=\"card\">\n            <div class=\"card-header color\" >\n                <h3 class=\"card-title\" align=\"center\" style=\"padding:10px\"\n                >Employee List</h3>\n            </div>\n\n            <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n                <ng-container matColumnDef=\"id\">\n                  <th mat-header-cell *matHeaderCellDef> No. </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n                </ng-container>\n              \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"name\">\n                  <th mat-header-cell *matHeaderCellDef> Name </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n                </ng-container>\n              \n                <!-- Weight Column -->\n                <ng-container matColumnDef=\"username\">\n                  <th mat-header-cell *matHeaderCellDef> username </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.username}} </td>\n                </ng-container>\n              \n                <!-- Symbol Column -->\n                <ng-container matColumnDef=\"email\">\n                  <th mat-header-cell *matHeaderCellDef> email </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"phone\">\n                  <th mat-header-cell *matHeaderCellDef> phone </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.phone}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"website\">\n                  <th mat-header-cell *matHeaderCellDef> website </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.website}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"company\">\n                  <th mat-header-cell *matHeaderCellDef> company </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.company.name}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"edit\">\n                  <th mat-header-cell *matHeaderCellDef> edit </th>\n                  <td mat-cell *matCellDef=\"let element\"> \n                    <button mat-button  color=\"green\"  (click)=\"edittUser(element,element.id)\">\n                      <i class=\"material-icons\" role=\"presentation\">\n                        edit</i>\n                      <span class=\"visuallyhidden\"></span>\n                    </button> </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"delete\">\n                  <th mat-header-cell *matHeaderCellDef> delete </th>\n                  <td mat-cell *matCellDef=\"let element\"> \n                    <button mat-button  color=\"red\" (click)=\"removeEmp(element.id)\" >\n                      <i class=\"material-icons\" role=\"presentation\">delete</i>\n                      <span class=\"visuallyhidden\"></span>\n                    </button> </td>\n                </ng-container>\n              \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </table>\n        </div>\n        <!-- <button mat-button class=\"mat-fab\" id=\"view-source\" color=\"warn\" routerLink=\"add-edit\">\n          <i class=\"material-icons\" role=\"presentation\">add</i>\n          <span class=\"visuallyhidden\"></span>\n        </button> -->\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\n\n\n@Injectable()\nexport class EmployeeService {\n  \n\n  constructor(public _http: Http, private _router: Router) { }\n\n  getHistory(){\n      return this._http.get(\"https://jsonplaceholder.typicode.com/users\")\n        .map((response: Response) => {\n            return response.json();\n        }).catch(this.handleError);\n  }\n\n  saveData(data){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this._http.post(\"https://jsonplaceholder.typicode.com/users\",data ,{ headers: headers })\n    .map((response: Response) => {\n        return response.json();\n    }).catch(this.handleError);\n  }\n\n  updateData(employee) {\n    return this._http.put(\"https://jsonplaceholder.typicode.com/users\" + '/' + employee.id, employee)\n    .map((response: Response) => {\n      return response.json();\n  }).catch(this.handleError);;\n  }\n\n  handleError(error: Response) {\n      console.error(\"error \" + error);\n      return Observable.throw(error);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}