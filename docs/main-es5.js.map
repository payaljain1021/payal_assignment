{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/employee/employee.component.ts","webpack:///src/app/employee/employee.component.html","webpack:///src/app/employee/employee_service/employee.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","EmployeeComponent","employee_service","router","fb","displayedColumns","dataSource","testInfo","form","group","name","required","noWhitespaceValidator","username","email","phone","website","getHistory","subscribe","ShowData","error","statusMessage","valid","employee_id","undefined","saveData","value","data","console","log","push","_updateChangeSubscription","updateData","alert","n","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","splice","employee","i","window","scroll","top","left","behavior","setValue","submit","control","isSpace","startsWith","endsWith","EmployeeService","_http","_router","get","map","response","json","handleError","headers","append","post","put","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeComponent } from './employee/employee.component';\n\nconst routes: Routes = [\n  {path :'' ,component:EmployeeComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'assignment';\n}\n","<!-- <app-employee></app-employee> -->\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTableModule} from '@angular/material/table';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatTableModule,\n    HttpModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit} from '@angular/core';\nimport { EmployeeService} from './employee_service/employee.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { Validators, FormBuilder, FormGroup, FormControl, FormGroupDirective } from '@angular/forms';\nimport Swal from 'sweetalert2';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css'],\n  providers :[EmployeeService]\n})\nexport class EmployeeComponent implements OnInit  {\n  displayedColumns: string[] = ['id', 'name', 'username', 'email','phone','website','company','edit' ,'delete'];\n  dataSource = new MatTableDataSource<PeriodicElement>();\n  private testInfo = [];\n  statusMessage: any;\n  form:FormGroup;\n  employee_id: any;\n  \n  constructor(private employee_service : EmployeeService,private router:Router,\n    fb:FormBuilder){\n\n    this.form=fb.group({\n      name:[\"\", [Validators.required ,noWhitespaceValidator ]],\n      username:[\"\", [Validators.required ,noWhitespaceValidator ]],\n      email:[\"\", [ Validators.required, noWhitespaceValidator]],\n       id:[\"\"],\n       phone:[\"\",[Validators.required,noWhitespaceValidator]],\n       website:[\"\" ],\n      // address : fb.group({\n      //   street :[\"\"],\n      //   suite :[\"\"],\n      //   city :[\"\"],\n      //   zipcode :[\"\"],\n      //   geo :fb.group({\n      //     lat :[\"\"],\n      //     lng :[\"\"]\n      //   })\n      // }),\n    //  website:[\"\"],\n      // company : fb.group({\n      //   name:[\"\"],\n      //   catchPhrase:[\"\"],\n      //   bs :[\"\"]\n      // }),\n    })\n  }\n  ngOnInit(){\n    this.employee_service.getHistory()\n    .subscribe(\n    ShowData => {\n        this.testInfo = ShowData;\n        this.dataSource =  new MatTableDataSource(this.testInfo)\n        }, error => {\n        this.statusMessage = error;\n    });\n  }\n \n   submit(){\n    if(this.form.valid)\n    {\n      if(this.employee_id == undefined ){\n     this.employee_service.saveData(this.form.value).subscribe(\n       data=>{\n        console.log(data);\n        this.dataSource.data.push(data);\n        this.dataSource._updateChangeSubscription();\n       // this.form.reset();\n       },error=>{\n         this.statusMessage = error;\n       })\n      }\n      else{\n        this.employee_service.updateData(this.form.value).subscribe(\n          data=>{\n           console.log(data);\n           this.dataSource.data[data.id -1] = this.form.value;\n           this.dataSource._updateChangeSubscription();\n           alert(\"updated successfully\")\n          //  this.form.reset();\n          },error=>{\n            this.statusMessage = error;\n          }\n        )\n      }\n    }\n    else{\n      alert(\"Please Fill The Required Fields\")\n    }\n  }\n  removeEmp(n: number) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You want be able to delete this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Delete'\n    }).then((result) => {\n        if (result.value) {\n          this.dataSource.data.splice(n-1,1);\n          this.dataSource._updateChangeSubscription();\n      }\n    })\n  }\n\n  public edittUser(employee, i) {\n    window.scroll({ \n      top: 0, \n      left: 0, \n      behavior: 'smooth' \n    });\n    this.employee_id = i;\n    this.form.setValue({\n      id: i,\n      name: employee.name,\n      username: employee.username,\n      email: employee.email,\n      phone: employee.phone,\n      website : employee.website\n    });\n  }\n\n}\n\n\nexport function noWhitespaceValidator(control: FormControl) {\n // const isSpace = (control.value || '').match(/\\s/g);\n  const isSpace = control.value.startsWith(' ') || control.value.endsWith(' ')\n  return isSpace ? {'whitespace': true} : null;\n}","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n       \n        <!-- <style>\n            #view-source {\n                position: fixed;\n                z-index: 999;\n                display: block;\n                right: 40px;\n                top: 42px;\n            }\n        </style> -->\n\n     <div style=\"width: 100%\"> \n      <form [formGroup]=\"form\" (ngSubmit)=\"submit()\" class=\"sigin\" >\n      <h3 class=\"text-center\" style=\"padding:10px\">Add Employee details</h3>\n      <div class=\"container\">\n        <div class=\"form-group row\">\n          <label for=\"Name\" class=\"col-sm-2 col-form-label\">Name</label>\n          <div class=\"col-sm-6\">\n            <input formControlName=\"name\" type=\"text\"  class=\"form-control\" id=\"FirstName\">\n            <div *ngIf=\"form.get('name').invalid && form.get('name').touched\" class=\"alert alert-danger\">\n              <span *ngIf=\"form.get('name').hasError('required')\">\n                * Name is required\n              </span>\n              <span *ngIf=\"form.get('name').hasError('whitespace')\">\n               * Name cannot contain whitespace\n            </span>\n          </div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label for=\"username\" class=\"col-sm-2 col-form-label\">Username</label>\n          <div class=\"col-sm-6\">\n            <input formControlName=\"username\" type=\"text\" class=\"form-control\" id=\"username\">\n            <div *ngIf=\"form.get('username').invalid && form.get('username').touched\" class=\"alert alert-danger\">\n              <span *ngIf=\"form.get('username').hasError('required')\">\n                * Username is required\n              </span>\n              <span *ngIf=\"form.get('username').hasError('whitespace')\">\n               * Username cannot contain whitespace\n            </span>\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n            <label for=\"staticEmail\" class=\"col-sm-2 col-form-label\">Email</label>\n            <div class=\"col-sm-6\">\n              <input formControlName=\"email\" type=\"email\"  class=\"form-control\" id=\"staticEmail\" value=\"email@example.com\">\n            <div *ngIf=\"form.get('email').invalid && form.get('email').touched\" class=\"alert alert-danger\">\n              <span *ngIf=\"form.get('email').hasError('required')\">\n                * Email is required\n              </span>\n           <span *ngIf=\"form.get('email').hasError('whitespace')\">\n            * Email cannot contain whitespace\n           </span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"phone\" class=\"col-sm-2 col-form-label\">Phone</label>\n            <div class=\"col-sm-6\">\n              <input formControlName=\"phone\" type=\"text\"  class=\"form-control\" id=\"phone\" >\n            <div *ngIf=\"form.get('phone').invalid && form.get('phone').touched\" class=\"alert alert-danger\">\n              <span *ngIf=\"form.get('phone').hasError('required')\">\n                * Phone Is Required\n             </span>\n             <span *ngIf=\"form.get('phone').hasError('whitespace')\">\n              * Phone cannot contain whitespace\n             </span>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label for=\"website\" class=\"col-sm-2 col-form-label\">Website</label>\n            <div class=\"col-sm-6\">\n              <input formControlName=\"website\" type=\"text\"  class=\"form-control\" id=\"phone\" >\n           \n            </div>\n          </div>\n         \n          <div class=\"form-group-row text-center\">\n              <button  class=\"btn btn-primary\">save</button>\n          </div>\n       </div>\n      </form>\n      </div>\n      \n        <div class=\"card\">\n            <div class=\"card-header color\" >\n                <h3 class=\"card-title\" align=\"center\" style=\"padding:10px\"\n                >Employee List</h3>\n            </div>\n\n            <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n                <ng-container matColumnDef=\"id\">\n                  <th mat-header-cell *matHeaderCellDef> No. </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n                </ng-container>\n              \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"name\">\n                  <th mat-header-cell *matHeaderCellDef> Name </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n                </ng-container>\n              \n                <!-- Weight Column -->\n                <ng-container matColumnDef=\"username\">\n                  <th mat-header-cell *matHeaderCellDef> username </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.username}} </td>\n                </ng-container>\n              \n                <!-- Symbol Column -->\n                <ng-container matColumnDef=\"email\">\n                  <th mat-header-cell *matHeaderCellDef> email </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"phone\">\n                  <th mat-header-cell *matHeaderCellDef> phone </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.phone}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"website\">\n                  <th mat-header-cell *matHeaderCellDef> website </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.website}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"company\">\n                  <th mat-header-cell *matHeaderCellDef> company </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.company.name}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"edit\">\n                  <th mat-header-cell *matHeaderCellDef> edit </th>\n                  <td mat-cell *matCellDef=\"let element\"> \n                    <button mat-button  color=\"green\"  (click)=\"edittUser(element,element.id)\">\n                      <i class=\"material-icons\" role=\"presentation\">\n                        edit</i>\n                      <span class=\"visuallyhidden\"></span>\n                    </button> </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"delete\">\n                  <th mat-header-cell *matHeaderCellDef> delete </th>\n                  <td mat-cell *matCellDef=\"let element\"> \n                    <button mat-button  color=\"red\" (click)=\"removeEmp(element.id)\" >\n                      <i class=\"material-icons\" role=\"presentation\">delete</i>\n                      <span class=\"visuallyhidden\"></span>\n                    </button> </td>\n                </ng-container>\n              \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </table>\n        </div>\n        <!-- <button mat-button class=\"mat-fab\" id=\"view-source\" color=\"warn\" routerLink=\"add-edit\">\n          <i class=\"material-icons\" role=\"presentation\">add</i>\n          <span class=\"visuallyhidden\"></span>\n        </button> -->\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\n\n\n@Injectable()\nexport class EmployeeService {\n  \n\n  constructor(public _http: Http, private _router: Router) { }\n\n  getHistory(){\n      return this._http.get(\"https://jsonplaceholder.typicode.com/users\")\n        .map((response: Response) => {\n            return response.json();\n        }).catch(this.handleError);\n  }\n\n  saveData(data){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this._http.post(\"https://jsonplaceholder.typicode.com/users\",data ,{ headers: headers })\n    .map((response: Response) => {\n        return response.json();\n    }).catch(this.handleError);\n  }\n\n  updateData(employee) {\n    return this._http.put(\"https://jsonplaceholder.typicode.com/users\" + '/' + employee.id, employee)\n    .map((response: Response) => {\n      return response.json();\n  }).catch(this.handleError);;\n  }\n\n  handleError(error: Response) {\n      console.error(\"error \" + error);\n      return Observable.throw(error);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}